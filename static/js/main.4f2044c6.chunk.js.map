{"version":3,"sources":["component/Tabs.js","component/Header.js","page/SearchPage.js","page/NominationPage.js","page/Main.js","App.js","index.js"],"names":["a11yProps","index","id","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","tabs","color","fontWeight","TabsWrappedLabel","action","classes","React","useState","value","setValue","Tabs","className","onChange","event","newValue","centered","indicatorColor","textColor","variant","Tab","label","onClick","render","renderSearch","renderNomination","padding","spacing","textAlign","appBar","zIndex","drawer","backdropFilter","boxShadow","borderRadius","border","ClippedDrawer","AppBar","position","Typography","marginTop","content","margin","width","input","avatar","getContrastText","blue","SearchPage","searchTerm","setSearchTerm","setInput","handleSearch","fetchAPI","then","res","updateSearchResult","alert","a","url","fetch","response","json","body","Zoom","in","style","transitionDelay","TextField","fullWidth","type","placeholder","InputProps","startAdornment","InputAdornment","IconButton","e","target","searchResult","Search","List","map","movie","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","ListItemSecondaryAction","edge","aria-label","disabled","containsMovie","addMovie","handleAdd","button","NominationPage","data","movieList","Object","keys","length","Fragment","Alert","severity","imdbID","removeMovie","maxNominations","Button","size","download","Main","searchPage","setSearchPage","localStorage","getItem","JSON","parse","setMovieList","setSearchResult","open","setOpen","setAlert","message","setMessage","saveMovieList","setItem","stringify","handleClose","reason","page","newMovie","Title","console","log","blob","Blob","decodeURIComponent","encodeURI","window","URL","createObjectURL","document","createElement","href","click","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","App","createMuiTheme","main","overrides","MuiOutlinedInput","borderColor","borderWidth","MuiFormLabel","ReactDOM","ThemeProvider","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4f2044c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    'aria-controls': `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tabs: {\r\n      color: 'black',\r\n      fontWeight: 'bold',\r\n  }\r\n}));\r\n\r\nexport default function TabsWrappedLabel(action) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState('one');\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>     \r\n\r\n      <Tabs className={classes.tabs} value={value} onChange={handleChange} centered indicatorColor=\"secondary\" textColor=\"secondary\" variant=\"fullWidth\">      \r\n        <Tab value=\"one\" label='Search' {...a11yProps('one')} \r\n            onClick={()=>{              \r\n                action.render.render.renderSearch()\r\n            }}\r\n        />\r\n        <Tab value=\"two\" label='Nomination' {...a11yProps('two')} \r\n            onClick={()=>{              \r\n              action.render.render.renderNomination()\r\n            }}  \r\n        />     \r\n      </Tabs>\r\n    </div>\r\n    \r\n    \r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from './Tabs';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {    \r\n    padding: theme.spacing(3),\r\n    textAlign: 'center',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,    \r\n    background: 'rgba( 150, 150, 150, 0.5)',\r\n    backdropFilter: 'blur(8px)',\r\n    boxShadow: '0 4px 32px 0 rgba( 50, 50, 50)',\r\n    borderRadius: '5px',\r\n    border: '0.5px solid rgba( 0, 0, 0)',  \r\n    textAlign: \"center\",  \r\n    padding: '8px',\r\n  }\r\n}));\r\n\r\nexport default function ClippedDrawer(render) {\r\n  const classes = useStyles();  \r\n\r\n  return (\r\n    <div className={classes.root}>  \r\n      <AppBar variant='elevation' position=\"fixed\" className={classes.appBar}>\r\n        <Typography color='secondary' variant='h4'>The Shoppies</Typography>\r\n        <Tabs render={render}/>\r\n      </AppBar>    \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { List, ListItem, TextField, Typography } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MovieFilterIcon from '@material-ui/icons/MovieFilter';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      marginTop: '100px',\r\n      textAlign: 'center',\r\n      \r\n    },\r\n    content: {   \r\n      margin: '20px auto',\r\n      width: \"60%\",\r\n      padding: '40px',\r\n      color: \"black\",  \r\n      background: \"rgba(200, 200, 200, 0.4)\",\r\n      backdropFilter: 'blur(8px)', \r\n      textAlign: 'center',\r\n      borderRadius: '30px',\r\n      border: \"1px solid rgb(255, 255, 255, 0.2)\"\r\n    },\r\n    input: {\r\n      margin: \"8px auto\",\r\n      color: 'black'   \r\n    },\r\n    avatar: {\r\n      color: theme.palette.getContrastText(blue['A100']),\r\n      backgroundColor: blue['A100'],\r\n    },\r\n  }));\r\n  \r\nconst OMDB_API = \"http://www.omdbapi.com/?i=tt3896198&apikey=c480e84f\";\r\n\r\n  export default function SearchPage(action) {\r\n    const classes = useStyles();\r\n    const [searchTerm, setSearchTerm] = React.useState();\r\n    const [input, setInput] = React.useState();\r\n\r\n    const searchBtn = () => {\r\n      return(\r\n        <InputAdornment>\r\n          <IconButton onClick={handleSearch}>\r\n            <SearchIcon color='secondary'/>\r\n          </IconButton>\r\n        </InputAdornment>\r\n      )\r\n    }    \r\n\r\n    const handleSearch = () => {\r\n      if (!input){\r\n        alert('Please enter a movie title');\r\n        return;\r\n      }\r\n      fetchAPI().then(res => action.updateSearchResult(res));\r\n      setSearchTerm(input);   \r\n    }\r\n\r\n    const handleAdd = (movie) => {\r\n      action.addMovie(movie);      \r\n    }\r\n\r\n    const fetchAPI = async () => {\r\n      let url = OMDB_API + `&s=${input}`;\r\n      const response = await fetch(url);\r\n      const body = await response.json();\r\n      return body;\r\n    };\r\n\r\n    const displaySearchResult = () => {  \r\n      if (action.searchResult && !action.searchResult.Search) return (<Typography variant='h5' color='secondary'>{`No Resut Found for ' ${searchTerm} '`}</Typography>)   \r\n      if (action.searchResult && action.searchResult.Search) return (            \r\n        <Zoom in={true}>   \r\n          <List>            \r\n            {!searchTerm && <Typography variant='h5' color='secondary'>Previous Search Result</Typography>}\r\n            {searchTerm && <Typography variant='h5' color='secondary'>{`Search Result for ' ${searchTerm} '`}</Typography>}\r\n            {action.searchResult.Search.map(movie => (\r\n              <ListItem>\r\n              <ListItemAvatar>\r\n                <Avatar alt={movie[\"Title\"]} src={movie[\"Poster\"]} className={classes.avatar}/>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={movie[\"Title\"]} secondary={movie[\"Year\"]}/>\r\n              <ListItemSecondaryAction>\r\n                  <IconButton edge=\"end\" aria-label=\"add\" disabled={action.containsMovie(movie)} onClick={() => { handleAdd(movie) }}>\r\n                    <MovieFilterIcon />                        \r\n                  </IconButton>\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n            ))} \r\n            \r\n          </List>    \r\n        </Zoom>    \r\n      )};\r\n\r\n    return(   \r\n      <Zoom in={true} style={{ transitionDelay: '400ms' }}>      \r\n        <main className={classes.root}>          \r\n            <div className={classes.content}>\r\n              <TextField fullWidth={true} className={classes.input} variant='outlined' type='input' placeholder='Please enter a movie title' InputProps={{ startAdornment: searchBtn()}}\r\n                onChange = {(e) => setInput(e.target.value)}>  \r\n              </TextField> \r\n              {displaySearchResult()}                        \r\n            </div>      \r\n                           \r\n        </main>  \r\n      </Zoom>            \r\n    );\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, List, ListItem, Typography } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      marginTop: '100px',\r\n      textAlign: 'center',\r\n    },\r\n    content: {   \r\n      margin: '20px auto',\r\n      width: \"60%\",\r\n      padding: '40px',\r\n      color: \"black\",  \r\n      background: \"rgba(200, 200, 200, 0.4)\",\r\n      backdropFilter: 'blur(8px)', \r\n      textAlign: 'center',\r\n      borderRadius: '30px',\r\n      border: \"1px solid rgb(255, 255, 255, 0.2)\"\r\n    },\r\n    button: {\r\n      margin: '20px',\r\n      color: '#ffffff'\r\n    },\r\n    avatar: {\r\n      color: theme.palette.getContrastText(blue['A100']),\r\n      backgroundColor: blue['A100'],\r\n    },\r\n  }));\r\n\r\n\r\nexport default function NominationPage(data) {\r\n    const classes = useStyles();\r\n\r\n    const movieList = (\r\n      <Zoom in={true}> \r\n          \r\n        <List>\r\n            {Object.keys(data.movieList).length === 0 && \r\n              <React.Fragment marginTop='100px'>\r\n                  <Alert color='primary' variant='filled' severity='info'>\r\n                    A bit empty here. You have not nominated any movies yet.\r\n                  </Alert>\r\n              </React.Fragment>\r\n            }\r\n              {data.movieList && Object.keys(data.movieList).map(imdbID => (\r\n                <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar alt={data.movieList[imdbID][\"Title\"]} src={data.movieList[imdbID][\"Poster\"]} className={classes.avatar} />\r\n                </ListItemAvatar>\r\n                <ListItemText primary={data.movieList[imdbID][\"Title\"]} secondary={data.movieList[imdbID][\"Year\"]} />    \r\n                <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"add\" onClick={() => data.removeMovie(data.movieList[imdbID])}>\r\n                  <BackspaceIcon />\r\n                </IconButton>\r\n                </ListItemSecondaryAction>             \r\n              </ListItem>\r\n              ))}  \r\n        </List>    \r\n      </Zoom>\r\n    );\r\n\r\n    return (   \r\n      <Zoom in={true} style={{ transitionDelay: '400ms' }}>         \r\n        <main className={classes.root}>       \r\n            <div className={classes.content}>                            \r\n              <Typography variant='h5'>Your Nominations</Typography> \r\n              <br/>\r\n              {Object.keys(data.movieList).length === data.maxNominations && \r\n              <React.Fragment marginTop='100px'>\r\n                  <Alert variant='filled' severity={'success'}>{`You have nominated ${data.maxNominations} movies!`}</Alert>\r\n              </React.Fragment>\r\n              }  \r\n              {movieList}\r\n            </div>\r\n            <div>  \r\n              <Button className={classes.button} disabled={Object.keys(data.movieList).length===0} variant='contained' size='large' color='primary' onClick={()=>data.download()}>Save List as JSON</Button>      \r\n            </div>                \r\n        </main>  \r\n      </Zoom>            \r\n    );\r\n}","import React from 'react'\r\nimport Header from '../component/Header'\r\nimport SearchPage from './SearchPage';\r\nimport NominationPage from './NominationPage';\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport {  Snackbar } from '@material-ui/core';\r\n\r\n\r\nexport default function Main(){       \r\n    const [searchPage, setSearchPage] = React.useState(true);   \r\n    const [movieList, setMovieList] = React.useState(localStorage.getItem('movieList') ? JSON.parse(localStorage.getItem('movieList')) : {}); \r\n    const [searchResult, setSearchResult] = React.useState();    \r\n    const [open, setOpen] = React.useState(false);\r\n    const [alert, setAlert] = React.useState();\r\n    const [message, setMessage] = React.useState();\r\n\r\n    const maxNominations = 5;\r\n\r\n    const render = {\r\n        renderSearch : () => {if (!searchPage) setSearchPage(true)},\r\n        renderNomination: () => {if (searchPage) setSearchPage(false)}\r\n    }\r\n\r\n    const saveMovieList = () => {\r\n        localStorage.setItem('movieList', JSON.stringify(movieList));     \r\n        setAlert('success');\r\n        setMessage('Saved');\r\n        setOpen(true);\r\n    }\r\n\r\n    const downloadMovieList = () => {\r\n        let filename = \"nominations.json\";\r\n        let contentType = \"application/json;charset=utf-8;\";        \r\n        const blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(movieList, null, 4)))], { type: contentType });\r\n        let url = window.URL.createObjectURL(blob);\r\n        let a = document.createElement('a');\r\n\t    a.href = url;\r\n\t    a.download = filename;\r\n\t    a.click();\r\n    }\r\n\r\n    const addMovie = (newMovie) => {        \r\n        if (movieList[newMovie.imdbID]) {\r\n            setAlert('warning');\r\n            setMessage(`${newMovie.Title} has already been nominated`);\r\n            setOpen(true);\r\n            return;\r\n        }\r\n        if (Object.keys(movieList).length === maxNominations) {\r\n            setAlert('warning');\r\n            setMessage(`You has already nominated ${maxNominations} movies`);\r\n            setOpen(true);\r\n            return;\r\n        }\r\n        saveMovieList();\r\n        setAlert('success');\r\n        setMessage('Sucessfully Nominated');\r\n        setOpen(true);\r\n        movieList[newMovie.imdbID] = newMovie;        \r\n        setMovieList(movieList);     \r\n    }\r\n\r\n    const removeMovie = (data) => {\r\n        delete movieList[data.imdbID];\r\n        saveMovieList();\r\n        setMovieList(movieList);\r\n        setAlert('success');\r\n        setMessage(`${data.Title} has been removed from Nomination`);\r\n        setOpen(true);\r\n    }\r\n\r\n    const containsMovie = (movie) => {        \r\n        return movieList[movie.imdbID] ? true : false;\r\n    }\r\n\r\n    const updateSearchResult = (data) => {\r\n        console.log(data);\r\n        if (!data.Search) {\r\n            setAlert('warning');\r\n            setMessage(\"Couldn't find any movie with that search term, please try again\");\r\n            setOpen(true);\r\n        }\r\n        setSearchResult(data);\r\n    }  \r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpen(false);\r\n      }\r\n    \r\n    const page = searchPage ? \r\n        <SearchPage addMovie={addMovie} movieList={movieList} updateSearchResult={updateSearchResult} searchResult={searchResult} containsMovie={containsMovie} /> : \r\n        <NominationPage movieList={movieList} removeMovie={removeMovie} download={downloadMovieList} maxNominations={maxNominations}/>;\r\n\r\n    return (\r\n        <React.Fragment>    \r\n            <Header render={render}/>   \r\n            {page}    \r\n            <Snackbar anchorOrigin={{vertical: 'bottom', horizontal: 'left'}} autoHideDuration={2000} open={open} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity={alert}>{message}</Alert>  \r\n            </Snackbar>           \r\n        </React.Fragment>\r\n    )\r\n}","import Main from './page/Main'\n\nfunction App() {\n  return (\n    <Main/>   \n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette:\r\n  {\r\n    primary: {\r\n    main: \"#6C9FF8\"\r\n    },\r\n    secondary: {\r\n    main: \"#ffffff\",\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        position: \"relative\",\r\n        marginTop: \"5%\",\r\n        \"& $notchedOutline\": {\r\n          borderColor: \"#fff\"\r\n        },\r\n        \"&:hover:not($disabled):not($focused):not($error) $notchedOutline\": {\r\n          borderColor: \"#6C9FF8\",\r\n\r\n          \"@media (hover: none)\": {\r\n            marginTop: \"5%\",\r\n            borderColor: \"#6C9FF8\"\r\n          }\r\n        },\r\n        \"&$focused $notchedOutline\": {\r\n          borderColor: \"#6C9FF8\",\r\n          borderWidth: 1\r\n        }\r\n      }\r\n    },\r\n    MuiFormLabel: {\r\n      root: {\r\n        marginTop: \"5%\",\r\n        color: \"#fff\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <React.StrictMode>      \r\n        <App />           \r\n    </React.StrictMode>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}